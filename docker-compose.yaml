services:
  front:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./front/:/usr/share/nginx/html
      - ./logs-front/:/var/log/nginx
      - ./nginx.conf:/etc/nginx/conf.d/app.conf
    depends_on:
      - orders
    ports:
      - "80:80"

  orders:
    build:
      context: orders
      dockerfile: Dockerfile
    container_name: orders
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - orders-db
      - kafka
    ports:
      - "8080:8080"

  telegram-notifier:
    build:
      context: telegram-notifier
      dockerfile: Dockerfile
    container_name: telegram-notifier
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - orders

  email-notifier:
    build:
      context: email-notifier
      dockerfile: Dockerfile
    container_name: email-notifier
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - orders


  orders-db:
    image: postgres:latest
    container_name: orders-db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: orders
    volumes:
      - orders-db-data:/var/lib/postgresql/data


  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - "9094:9094"
    restart: always
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,OUTSIDE://:9094,CONTROLLER://:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_KRAFT_CLUSTER_ID=S40B8iVtR0umuTyuM1eLjA
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
    volumes:
      - kafka:/bitnami/kafka

volumes:
  kafka:
  orders-db-data:
